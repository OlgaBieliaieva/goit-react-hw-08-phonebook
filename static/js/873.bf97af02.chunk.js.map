{"version":3,"file":"static/js/873.bf97af02.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/SectionTitle/SectionTitle.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilterQuery = state => state.filter.filterQuery;\n","import PropTypes from 'prop-types';\n\nconst SectionTitle = ({ text }) => {\n  return (\n    <>\n      <h2>{text}</h2>\n    </>\n  );\n};\n\nexport default SectionTitle;\n\nSectionTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formInput\":\"ContactForm_formInput__GszVU\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(e);\n    createContact(name, phone);\n    reset();\n  };\n\n  const createContact = (name, phone) => {\n    const newContact = {\n      name: name,\n      phone: phone,\n    };\n    const contactNames = [];\n    contacts.map(contact => contactNames.push(contact.name));\n\n    if (contactNames.includes(name)) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContact(newContact));\n  };\n\n  \n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <form\n      className={css.contactForm}\n      onSubmit={handleSubmit}\n      name={name}\n      number={phone}\n    >\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}          \n          placeholder=\"type name here...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleChange}          \n          placeholder=\"type number here...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"Filter_formLabel__Ozoh5\",\"formInput\":\"Filter_formInput__XNLZn\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filter } from 'redux/contacts/filterSlice';\nimport { getFilterQuery } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const filterQuery = useSelector(getFilterQuery);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const { value } = e.target;\n    dispatch(filter(value));\n  };\n\n  return (\n    <label className={css.formLabel}>\n      Find contacts by name\n      <input\n        className={css.formInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filterQuery}\n        onChange={handleFilterChange}\n        placeholder=\"type your query here...\"\n        autoComplete=\"off\"\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListDefault\":\"ContactList_contactListDefault__pV7s+\",\"listItemBtn\":\"ContactList_listItemBtn__YmrJe\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts, getFilterQuery } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filterQuery = useSelector(getFilterQuery);\n  const dispatch = useDispatch();\n\n  const removeContact = e => {\n    const contactId = e.target.id;\n    dispatch(deleteContact(contactId));\n  };\n\n  return contacts.length > 0 ? (\n    <ul className={css.contactList}>\n      {contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n        )\n        .map(({ id, name, phone }) => {\n          return (\n            <li className={css.contactItem} key={id}>\n              {name}: {phone}\n              <button\n                className={css.listItemBtn}\n                id={id}\n                type=\"button\"\n                onClick={removeContact}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n    </ul>\n  ) : (\n    <p className={css.contactListDefault}>\n      Sorry, your phonebook is empty. <br></br>\n      Add your first contact, please.\n    </p>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { getError, getIsLoading } from '../redux/contacts/selectors';\nimport SectionTitle from '../components/SectionTitle/SectionTitle';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\n\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <SectionTitle text=\"Phonebook\" />\n      <ContactForm />\n      <SectionTitle text=\"Contacts\" />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </main>\n  );\n}\n\n\n\n\n\n\n\n\n// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\n\n// export default function Tasks() {\n//   const dispatch = useDispatch();\n//   const isLoading = useSelector(selectLoading);\n\n//   useEffect(() => {\n//     dispatch(fetchTasks());\n//   }, [dispatch]);\n\n//   return (\n//     <>\n      \n//         <title>Your tasks</title>\n      \n//       <TaskEditor />\n//       <div>{isLoading && 'Request in progress...'}</div>\n//       <TaskList />\n//     </>\n//   );\n// }"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilterQuery","filter","filterQuery","text","ContactForm","useState","name","setName","phone","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","value","createContact","newContact","contactNames","map","contact","push","includes","alert","addContact","reset","className","css","onSubmit","preventDefault","number","type","onChange","placeholder","pattern","title","required","autoComplete","Filter","ContactList","removeContact","contactId","id","deleteContact","length","toLowerCase","onClick","App","useEffect","fetchContacts"],"sourceRoot":""}